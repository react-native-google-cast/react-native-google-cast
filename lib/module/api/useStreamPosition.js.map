{"version":3,"sources":["useStreamPosition.ts"],"names":["useEffect","useState","useRemoteMediaClient","useStreamPosition","interval","client","streamPosition","setStreamPosition","getStreamPosition","then","subscription","onMediaProgressUpdated","remove"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,iBAAT,CAA2BC,QAA3B,EAA8C;AAC3D,QAAMC,MAAM,GAAGH,oBAAoB,EAAnC;AACA,QAAM,CAACI,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAgB,IAAhB,CAApD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,MAAL,EAAa;AACXE,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACA;AACD;;AAEDF,IAAAA,MAAM,CAACG,iBAAP,GAA2BC,IAA3B,CAAgCF,iBAAhC;AAEA,UAAMG,YAAY,GAAGL,MAAM,CAACM,sBAAP,CACnBJ,iBADmB,EAEnBH,QAFmB,CAArB;AAKA,WAAO,MAAM;AACXM,MAAAA,YAAY,CAACE,MAAb;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACP,MAAD,EAASD,QAAT,CAhBM,CAAT;AAkBA,SAAOE,cAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport useRemoteMediaClient from './useRemoteMediaClient'\n\n/**\n * Hook to retrieve current stream position.\n *\n * @param {number} [interval] update interval (defaults to 1 second)\n * @returns current position in seconds, or `null` if there's no current media\n */\nexport default function useStreamPosition(interval?: number) {\n  const client = useRemoteMediaClient()\n  const [streamPosition, setStreamPosition] = useState<number | null>(null)\n\n  useEffect(() => {\n    if (!client) {\n      setStreamPosition(null)\n      return\n    }\n\n    client.getStreamPosition().then(setStreamPosition)\n\n    const subscription = client.onMediaProgressUpdated(\n      setStreamPosition,\n      interval\n    )\n\n    return () => {\n      subscription.remove()\n    }\n  }, [client, interval])\n\n  return streamPosition\n}\n"]}