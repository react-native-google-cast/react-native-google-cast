{"version":3,"sources":["useCastDevice.ts"],"names":["useEffect","useState","useCastSession","useCastDevice","device","setDevice","session","getCastDevice","then"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,GAAwC;AACrD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAgB,IAAhB,CAApC;AACA,QAAMK,OAAO,GAAGJ,cAAc,EAA9B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,OAAL,EAAcD,SAAS,CAAC,IAAD,CAAT,CAAd,KACKC,OAAO,CAACC,aAAR,GAAwBC,IAAxB,CAA6BH,SAA7B;AACN,GAHQ,EAGN,CAACC,OAAD,CAHM,CAAT;AAKA,SAAOF,MAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport Device from '../types/Device'\nimport useCastSession from './useCastSession'\n\n/**\n * Hook that provides the currently connected {@link Device}.\n *\n * @returns current device, or `null` if there's no session connected\n * @example\n * ```js\n * import { useCastDevice } from 'react-native-google-cast'\n *\n * function MyComponent() {\n *   const castDevice = useCastDevice()\n *\n *   if (castDevice) {\n *     console.log(castDevice)\n *   }\n * }\n * ```\n */\n\nexport default function useCastDevice(): Device | null {\n  const [device, setDevice] = useState<Device | null>(null)\n  const session = useCastSession()\n\n  useEffect(() => {\n    if (!session) setDevice(null)\n    else session.getCastDevice().then(setDevice)\n  }, [session])\n\n  return device\n}\n"]}