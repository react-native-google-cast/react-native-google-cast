{"version":3,"sources":["useMediaStatus.ts"],"names":["useEffect","useState","useRemoteMediaClient","useMediaStatus","client","mediaStatus","setMediaStatus","getMediaStatus","then","subscription","onMediaStatusUpdated","remove"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,GAA0B;AACvC,QAAMC,MAAM,GAAGF,oBAAoB,EAAnC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAqB,IAArB,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,MAAL,EAAa;AACXE,MAAAA,cAAc,CAAC,IAAD,CAAd;AACA;AACD;;AAEDF,IAAAA,MAAM,CAACG,cAAP,GAAwBC,IAAxB,CAA6BF,cAA7B;AAEA,UAAMG,YAAY,GAAGL,MAAM,CAACM,oBAAP,CAA4BJ,cAA5B,CAArB;AAEA,WAAO,MAAM;AACXG,MAAAA,YAAY,CAACE,MAAb;AACD,KAFD;AAGD,GAbQ,EAaN,CAACP,MAAD,CAbM,CAAT;AAeA,SAAOC,WAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport MediaStatus from '../types/MediaStatus'\nimport useRemoteMediaClient from './useRemoteMediaClient'\n\n/**\n * Hook to retrieve current media status.\n *\n * Note that the media status is only updated when the status of the stream changes. Therefore, `mediaStatus.streamPosition` only reflects the time of the last status update.\n * If you need to know the current progress in near real-time, see `useStreamPosition` instead.\n *\n * @returns current media status, or `null` if there's no current media\n */\nexport default function useMediaStatus() {\n  const client = useRemoteMediaClient()\n  const [mediaStatus, setMediaStatus] = useState<MediaStatus | null>(null)\n\n  useEffect(() => {\n    if (!client) {\n      setMediaStatus(null)\n      return\n    }\n\n    client.getMediaStatus().then(setMediaStatus)\n\n    const subscription = client.onMediaStatusUpdated(setMediaStatus)\n\n    return () => {\n      subscription.remove()\n    }\n  }, [client])\n\n  return mediaStatus\n}\n"]}